name: Test package
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test package
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python-version:
          - "3.12"
          - "3.13"
        type:
          - test
        include:
          - os: ubuntu-latest
            python-version: "3.13"
            type: code style
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update pip
        run: python -m pip install --upgrade pip
      # Tests
      - name: Install test dependencies
        if: ${{ matrix.type == 'test' }}
        run: python -m pip install . --group test
      - name: Check types
        if: ${{ matrix.type == 'test' && matrix.python-version != '3.14' }}
        run: pyright
      - name: Test package
        if: ${{ matrix.type == 'test' }}
        run: pytest -vv --showlocals --tb=short --color=yes --junit-xml=test-results.xml
      # Lint
      - name: Install lint dependencies
        if: ${{ matrix.type == 'code style' }}
        run: python -m pip install . --group lint
      - name: Check code style
        if: ${{ matrix.type == 'code style' }}
        run: pre-commit run -a

  test-action:
    name: Test action
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run action
        id: action
        uses: ./
      - name: Print results
        run: |
          echo 'text=${{ steps.action.outputs.text }}'
          echo 'is-latest=${{ steps.action.outputs.is-latest }}'
          echo 'is-pre-release=${{ steps.action.outputs.is-pre-release }}'
          echo 'is-post-release=${{ steps.action.outputs.is-post-release }}'
          echo 'is-unreleased=${{ steps.action.outputs.is-unreleased }}'
          echo 'data=${{ steps.action.outputs.data }}'
